#!/usr/bin/env bash

# Quit on error
set -e

echo "[i] Ask for sudo password"
sudo -v

tags="$1"
work_directory=$(pwd)
custom_file_path="$work_directory/custom.yml"

if [ -z $tags ]; then
  tags="all"
fi

case "$(uname -s)" in
  Linux)
    [ ! -f /etc/os-release ] && echo '[!] Unsupported Linux Distribution' && exit 1
    [ ! -x "$(command -v ansible)" ] && ansible_not_installed=true

    . /etc/os-release

    case "$ID" in
      arch)
        if  [ $ansible_not_installed ]; then
          echo "[i] Install Ansible"

          sudo pacman -S --noconfirm ansible
          ansible-galaxy install -r requirements.yaml
        fi
        ;;
      *)
        echo "[!] Unsupported Linux Distribution: $ID"
        exit 1
        ;;
    esac
    ;;
esac

welcome_message() {
  echo "Welcome to ansible setup"
  echo
  echo "This script is interactive"
  echo "If you prefer to fill in the custom.yml file manually,"
  echo "press [Ctrl+C] to quit this script"
}

get_username() {
  echo
  echo "Enter your desired username"
  read -p "Username: " username
  while ! [[ "$username" =~ ^[a-z0-9]*$ ]]; do
    echo "[!] Invalid username"
    echo "[!] Make sure the username only contains lowercase letters and numbers"
    read -p "Username: " username
  done

  echo "username: \"${username}\"" >> $custom_file_path
}

get_user_password() {
  echo
  echo "Enter your user password"
  echo "This password will be used for login your user"
  read -s -p "Password: " user_password
  echo
  read -s -p "Repeat password: " user_password2
  echo

  while ! [[ "$user_password" == "$user_password2" ]]; do
    echo
    echo "[!] The passwords don't match"
    read -s -p "Password: " user_password
    echo
    read -s -p "Repeat password: " user_password2
  done

  echo "user_password: \"${user_password}\"" >> $custom_file_path
}

touch $custom_file_path
# Clean already existed file
cat /dev/null > $custom_file_path

clear
welcome_message
get_username
get_user_password

echo "[i] Run Playbook"
ansible-playbook bootstrap.yml --ask-become-pass --tags $tags 
# --skip-tags arch_linux

echo "[i] From now on you can use $ dotfiles to manage your dotfiles"
echo "[i] Done."
